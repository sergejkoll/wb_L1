package main

import "fmt"

func main() {
	arr := []int{5, 6, 7, 2, 1, 0, 4, 3, 2}
	fmt.Println(quickSort(arr, 0, len(arr)-1))
}

func quickSort(arr []int, l int, r int) []int {
	if l < r {
		// partition
		pivot := arr[r]           // выбираем опорный элемент (по идее лучше брать медианное значение)
		i := l                    // индекс в который будет перемещен опорный элемент
		for j := l; j <= r; j++ { // проход по подмассиву
			if arr[j] < pivot { // поиск элементов которые меньше опорного
				arr[i], arr[j] = arr[j], arr[i] // свап элементов
				i++
			}
		}
		arr[i], arr[r] = arr[r], arr[i] // после прохождения всего массива ставим опрный элемент на свое место
		// таким образом получаем разбиение на два подмассива
		// первый - все элементы которого меньше опорного
		// второй - все элементы которого больше опорного
		// -> рекурсивный вызов в этих подмассивах без опорного

		quickSort(arr, l, i-1)
		quickSort(arr, i+1, r)
	}
	return arr
}
